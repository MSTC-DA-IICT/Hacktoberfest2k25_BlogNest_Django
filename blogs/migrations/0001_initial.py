# Generated by Django 5.2.7 on 2025-10-17 17:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter a descriptive title for your blog post (10-200 characters)', max_length=200, validators=[django.core.validators.MinLengthValidator(10, message='Title must be at least 10 characters long.'), django.core.validators.MaxLengthValidator(200, message='Title cannot exceed 200 characters.')])),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly version of the title (auto-generated if left blank)', max_length=250, unique=True)),
                ('content', models.TextField(help_text='Write your blog post content (minimum 100 characters)', validators=[django.core.validators.MinLengthValidator(100, message='Content must be at least 100 characters long.')])),
                ('excerpt', models.TextField(blank=True, help_text='Brief summary of your blog post (optional, max 500 characters)', max_length=500)),
                ('featured_image', models.ImageField(blank=True, help_text='Upload a featured image for your blog post (optional)', null=True, upload_to='blog_images/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', help_text='Choose the publication status', max_length=10)),
                ('is_featured', models.BooleanField(default=False, help_text='Mark this post as featured')),
                ('allow_comments', models.BooleanField(default=True, help_text='Allow readers to comment on this post')),
                ('likes', models.IntegerField(default=0)),
                ('views', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, help_text='Select a category for your blog post', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blog_posts', to='blogs.category')),
                ('tags', models.ManyToManyField(blank=True, help_text='Select relevant tags for your blog post', related_name='blog_posts', to='blogs.tag')),
            ],
            options={
                'verbose_name': 'Blog Post',
                'verbose_name_plural': 'Blog Posts',
                'ordering': ['-created_at'],
            },
        ),
    ]
